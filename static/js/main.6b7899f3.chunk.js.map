{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAIMA,SAAe,CACjBC,OAAQ,CACJC,KAAO,sBACPC,SAAU,OAEdC,OAAS,CACLD,SAAU,YACVD,KAAO,eAwBAG,EAbO,SAACC,GAEnB,IAVeC,EAAIC,EAUbC,GAVSF,EAUUD,EAAMC,KAVZC,GAUgB,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EAEbD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAGJK,EAGJZ,EAAaS,GAA9BP,EAHqBU,EAGrBV,KAAKC,EAHgBS,EAGhBT,SACZ,OACAU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aC5Bde,EAAU,SAACZ,GACb,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAS,oBACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAqBV,EAAMa,WAKrDD,EAAQE,aAAe,CACnBD,QAAU,cAGCD,QCDTG,6MAEFC,MAAQ,CAAEf,IAAM,KAAMgB,WAAa,uFAEhB,IAAAC,EAAAC,KACfC,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GACDN,EAAKO,SACD,CAAExB,IAAKuB,EAASE,OAAOC,YAG3B,SAACC,GAAD,OAASV,EAAKO,SAAS,CAACR,WAAaW,EAAIf,oDAK7C,OAAIM,KAAKH,MAAMC,aAAeE,KAAKH,MAAMf,IAGjCM,EAAAC,EAAAC,cAAA,qBACKU,KAAKH,MAAMC,aAOnBE,KAAKH,MAAMC,YAAcE,KAAKH,MAAMf,IAEjCM,EAAAC,EAAAC,cAACoB,EAAD,CAAe5B,IAAKkB,KAAKH,MAAMf,MAIhCM,EAAAC,EAAAC,cAACqB,EAAD,CAASjB,QAAO,oEAIlB,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACPS,KAAKY,wBAvCZC,IAAMC,WA6CxBC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAAYC,SAASC,cAAc","file":"static/js/main.6b7899f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\n\r\nconst seasonConfig = {\r\n    summer :{\r\n        text : 'Let\\'s hit the beach',\r\n        iconName: 'sun'\r\n    },\r\n    winter : {\r\n        iconName: 'snowflake',\r\n        text : 'It\\'s cold'  \r\n    }\r\n};\r\nconst getSeason = (lat,month) => {\r\n    if(month > 2 && month < 9){\r\n        // Lat if greater than zero than it's norther Hemisphere\r\n        return lat > 0 ? 'summer' : 'winter';\r\n    }else{\r\n        return lat > 0 ? 'winter' : 'summer';\r\n    }\r\n};\r\nconst SeasonDisplay = (props) =>{\r\n    // console.log(props);\r\n    const season = getSeason(props.lat,new Date().getMonth());\r\n    const {text,iconName} = seasonConfig[season];\r\n    return (\r\n    <div className={`season-display ${season}`}>\r\n        <i className={`icon-left massive ${iconName} icon`} />\r\n        <h1>{text}</h1>\r\n        <i className={`icon-right massive ${iconName} icon`} />\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) =>{\r\n    return(\r\n        <div className={`ui active dimmer`} >\r\n            <div className={`ui text loader`}>{props.message}</div>\r\n         </div>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message : 'Loading...'\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\n// const App = () =>{\r\n//     window.navigator.geolocation.getCurrentPosition(\r\n//         (position) => console.log(position),\r\n//         (err) => console.log(err)\r\n//     );\r\n//     return <div> Hi There !</div>\r\n// };\r\n\r\nclass App extends React.Component{\r\n\r\n    state = { lat : null, errMessage : '' };\r\n\r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n            this.setState (\r\n                { lat: position.coords.latitude}\r\n                );\r\n            },\r\n            (err) => this.setState({errMessage : err.message})\r\n            \r\n        );\r\n    }\r\n    renderContent(){\r\n        if (this.state.errMessage && !this.state.lat){\r\n            return (\r\n       \r\n                <div> \r\n             Error: {this.state.errMessage}</div>\r\n            \r\n            \r\n            );\r\n        }\r\n\r\n\r\n        if (!this.state.errMessage && this.state.lat){\r\n            return (\r\n                <SeasonDisplay lat={this.state.lat} />\r\n            );\r\n        }\r\n\r\n        return <Spinner message={`Please Accept Location Request`}/>;  \r\n    }\r\n    render(\r\n    ){\r\n             return(\r\n                 <div className=\"border red\">\r\n                        {this.renderContent()}\r\n                 </div>\r\n             );\r\n    };\r\n}\r\n\r\nReactDOM.render(<App></App>,document.querySelector('#root'));"],"sourceRoot":""}